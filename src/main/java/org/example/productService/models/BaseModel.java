/*
 Base Model - A common practice among developers to create a base class or interface for their domain models (entities) to share common properties and behaviors.
 Id - The @Id annotation is used to specify the primary key of an entity. In this case, the id field is the primary key of the Product entity.
 GeneratedValue - The @GeneratedValue annotation is used to specify the generation strategy for the primary key. In this case, the GenerationType.IDENTITY strategy is used to automatically generate unique primary key values.

 Why Create a Base Model?
    Code Reusability: Avoids redundant code by defining shared attributes like creation/modification timestamps, versioning, or other common fields.
    Consistent Structure: Enforces a uniform structure across your domain models.
    Additional Functionality: Can encapsulate common logic or methods that multiple entities might need.

    MappedSuperclass - So that classes that implements this class (Child Classes) will be able to use its attributes and methods.

    [Important] Don't create a table fot Base Model class in the database. It's just a common class to be extended by other classes.

    GenerationType - Defines the strategy to generate primary keys. There are four types of generation strategies:
        GenerationType.AUTO - The persistence provider will choose the appropriate strategy for the underlying database. This is the default strategy. This creates tableName_seq in the database.
        GenerationType.IDENTITY - The primary key is generated by the database using an auto-increment column. This strategy is supported by most databases.
        GenerationType.SEQUENCE - The primary key is generated using a sequence. This strategy is supported by Oracle, PostgreSQL, and other databases.
        GenerationType.TABLE - The primary key is generated using a database table to store the next available ID. This strategy is the least efficient and should be avoided.
*/

package org.example.productService.models;

import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.MappedSuperclass;
import lombok.Getter;
import lombok.Setter;

import java.util.Date;

@Getter
@Setter
@MappedSuperclass
public class BaseModel {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;    // ID will be generated by the database and not by the user
    private Date createdAt;
    private Date lastModifiedAt;
    private boolean isDeleted;
}
